generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String    @id @default(uuid())
  name                 String
  email                String    @unique
  password             String?
  createdAt            DateTime  @default(now())
  isVerified           Boolean   @default(false)
  otp                  String?
  appleId              String?   @unique
  googleId             String?   @unique
  resetPasswordExpires DateTime?
  resetPasswordToken   String?
  otpCreatedAt         DateTime?
  imageAnalyses        ImageAnalysis[] @relation("UserToImageAnalysis")
  favorites            Favorite[]      @relation("UserToFavorite")
}

model ImageAnalysis {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  imageUrl    String?
  materials   Material[] @relation("ImageAnalysisToMaterial")  
  userId      String
  user        User     @relation("UserToImageAnalysis", fields: [userId], references: [id], onDelete: Cascade)
}



model Material {
  id                String    @id @default(uuid())
  materialName      String
  materialType      String
  category         String 
  materialProperties String[]  // Array of strings
  materialOrigins   String[]  // Array of strings
  usesOfMaterial    String[]  // Array of strings
  materialImage     String?  // Optional, can be null
  description String @default("No description available")
  imageAnalysisId   String
  imageAnalysis     ImageAnalysis @relation("ImageAnalysisToMaterial", fields: [imageAnalysisId], references: [id], onDelete: Cascade)
  favorites         Favorite[] @relation("MaterialToFavorite")
}

model Favorite {
  id         String   @id @default(uuid())
  userEmail     String
  materialId String
  user       User     @relation("UserToFavorite", fields: [userEmail], references: [email], onDelete: Cascade)
  material   Material @relation("MaterialToFavorite", fields: [materialId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
}
